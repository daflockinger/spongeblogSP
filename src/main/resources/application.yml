# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/spongeblog?useSSL=false&useUnicode=yes&characterEncoding=UTF-8
# Username and password
    username: root
    password: root
# Keep the connection alive if idle for a long time (needed in production)
    testWhileIdle: true
    validationQuery: SELECT 1
# Show or not log for each sql query
  jpa: 
    database: mysql
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
    hibernate:
      ddl-auto: validate
  jackson: 
    date-format: com.flockinger.spongeblogSP.config.swagger.RFC3339DateFormat
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
#  http:
#    multipart:
#      max-file-size: 5300KB
#      max-request-size: 5300KB

### config for getting Hibernate generated SQL
#      ddl-auto: create-drop
#logging:
#  level:
#    org:
#      hibernate:
#        tool:
#          hbm2ddl: DEBUG
#        SQL: DEBUG   
#        type: TRACE  
###

flyway:
  baseline-on-migrate: true


#logging:
#  level:
#    org.springframework.security: DEBUG      
    
blog:
  paging:
    default-page: 0
    default-items-per-page: 5

      
#### Test Profile
---
spring: 
  profiles: test
  datasource:
    url: jdbc:mysql://localhost:3306/testspongeblog?useSSL=false&useUnicode=yes&characterEncoding=UTF-8
flyway:
  baseline-on-migrate: true




#### Production Profile
---
spring: 
  profiles: production

## openId config for Google
google:
  clientId: 545703912504-27e0405fti21t64ie9gfb1mhppptr5e0.apps.googleusercontent.com
  clientSecret: Oqu_K7VH9-VwBTJcnDsc5O1M
  accessTokenUri: https://www.googleapis.com/oauth2/v3/token
  userAuthorizationUri: https://accounts.google.com/o/oauth2/auth
  redirectUri: http://localhost:8080/google-login
    